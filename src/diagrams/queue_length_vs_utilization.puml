@startuml

!include ../style.puml

title Queue Length (Lq) vs. System Utilization (ρ)
caption Based on M/M/1 model: Lq = ρ² / (1 - ρ). This illustrates *average* queue length.

actor User

box "System Under Load" #LightYellow
    participant Server as S
    queue "Request Queue" as Q #LightBlue
end box

User -> Q : Requests arrive (Rate: λ)
Q -> S : Requests processed (Rate: μ)
S --> User : Responses

note right of Q
    <b>Average Queue Length (Lq) for M/M/1:</b>

    <b>When Utilization (ρ = λ/μ) is low:</b>
    *   ρ = 50%  => Lq ≈ 0.5
        (Queue is typically short)

    <b>As Utilization increases:</b>
    *   ρ = 80%  => Lq ≈ 3.2
    *   ρ = 90%  => Lq ≈ 8.1
    *   ρ = 95%  => Lq ≈ 18

    <b>As Utilization approaches 100% (Saturation):</b>
    *   ρ = 98%  => Lq ≈ 48
    *   ρ = 99%  => Lq ≈ 98+
    *   ρ → 100% => Lq → ∞ (Theoretical)

    <b>Real-world Implications at Saturation:</b>
    - Queue limits are hit -> Requests dropped.
    - Latency (W) skyrockets.
    - System may become unstable or thrash.
    - Service rate (μ) itself might degrade.
    The system is "saturated" not by a specific
    queue number, but by its inability to keep up.

    <b>Context for High-Throughput Systems (e.g., Web/DB servers):</b>
    For systems handling 1000s of requests/sec (high λ):
    *   **Configured Buffers:** Actual system queue limits can be in the 1000s or 10,000s.
        Saturation occurs when these hard limits are hit.
    *   **Total In-flight Requests (L):** If average response time (W) significantly
        increases (e.g., to 1-2 seconds) due to high utilization, the total number
        of requests in the system (L = λW) can easily reach 1000s or 10,000s.
        For example, if λ = 5000 req/s and W = 2s, L = 10,000 requests.
    *   **Impact Scale:** "Saturation" in these contexts often means tens of thousands
        of requests are being queued, delayed, timed out, or dropped over a short period,
        reflecting severe performance degradation beyond simple M/M/1 Lq averages.
end note
@enduml 