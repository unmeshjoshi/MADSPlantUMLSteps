@startuml
!include ../../../style.puml

title Quorum Intersection Property

' [step1 {"name":"5-Node Cluster Setup"}]
note as cluster #E6F3FF
**5-Node Cluster Configuration:**
• Total nodes: 5 (athens, byzantium, cyrene, delphi, ephesus)  
• Quorum size: 3 (majority of 5)
• Fault tolerance: 2 nodes can fail
• Intersection guarantee: Any two quorums overlap
end note

rectangle "5-Node Cluster" {
  circle "athens" as A
  circle "byzantium" as B  
  circle "cyrene" as C
  circle "delphi" as D
  circle "ephesus" as E
}
' [/step1]

' [step2 {"name":"Quorum 1 - Write Operation", "newPage":"true"}]
rectangle "Quorum 1 (Write)" #E6FFE6 {
  circle "athens" as A1 #90EE90
  circle "byzantium" as B1 #90EE90
  circle "cyrene" as C1 #90EE90
}

rectangle "Available but not in quorum" #F0F0F0 {
  circle "delphi" as D1 #F0F0F0
  circle "ephesus" as E1 #F0F0F0
}

note right of A1 #E6FFE6
**Write Quorum:**
athens + byzantium + cyrene = 3 nodes
Satisfies majority requirement (3/5)
Write operation succeeds
end note
' [/step2]

' [step3 {"name":"Potential Failure Scenario"}]
note bottom #FFFFCC
**Failure Scenario:** 
What if athens and delphi fail after the write?
Can a subsequent read still get the data?
This tests the intersection property.
end note

rectangle "Failed Nodes" #FFE6E6 {
  circle "athens" as AF #FF6B6B
  circle "delphi" as DF #FF6B6B  
}

note right of AF #FFE6E6
**Failed Nodes:**
athens and delphi are unavailable
Only 3 nodes remain: byzantium, cyrene, ephesus
end note
' [/step3]

' [step4 {"name":"Quorum 2 - Read Operation", "newPage":"true"}]
rectangle "Quorum 2 (Read)" #FFE6CC {
  circle "byzantium" as B2 #FFD700
  circle "cyrene" as C2 #FFD700
  circle "ephesus" as E2 #FFD700
}

note right of B2 #FFE6CC
**Read Quorum:**
byzantium + cyrene + ephesus = 3 nodes
Still satisfies majority requirement (3/5)
Can form valid quorum despite failures
end note
' [/step4]

' [step5 {"name":"Intersection Demonstrated"}]
rectangle "Intersection" #E6F3FF {
  circle "byzantium" as BI #87CEEB  
  circle "cyrene" as CI #87CEEB
}

note right of BI #E6F3FF
**Critical Intersection:**
• Write Quorum 1: {athens, byzantium, cyrene}
• Read Quorum 2: {byzantium, cyrene, ephesus}  
• Intersection: {byzantium, cyrene}
• **Guarantee:** At least one node in read quorum has the written data
end note
' [/step5]

' [step6 {"name":"Mathematical Guarantee", "newPage":"true"}]
note bottom #E6FFE6
**Quorum Intersection Theorem:**

For cluster size N and quorum size Q:
• **Requirement:** Q > N/2 (majority quorum)
• **Guarantee:** Any two quorums intersect in at least 1 node
• **Proof:** 2Q > N, so intersection ≥ 2Q - N > 0

**Examples:**
• N=3, Q=2: intersection ≥ 1
• N=5, Q=3: intersection ≥ 1  
• N=7, Q=4: intersection ≥ 1

**This ensures data consistency across operations!**
end note
' [/step6]

@enduml 