import com.pumlsteps.PlantUmlProcessor

import java.nio.file.Files
import java.nio.file.Paths

import static groovy.io.FileType.*
import java.nio.file.StandardCopyOption


plugins {
    id 'java'
    id 'groovy'
}

// Initialize the metadata map at the project level
project.ext {
    diagramMetadata = [:]
}

// Gradle task to generate diagrams for all .puml files in the source directory
task stepDiagrams {
    doLast {
        def plantUmlJarPath = './plantuml-1.2024.8.jar'
        def sourceDir = file('src/diagrams')
        def outputDir = file('build/diagrams')
        outputDir.mkdirs()

        if (!sourceDir.exists() || !sourceDir.isDirectory()) {
            throw new GradleException("Source directory not found: ${sourceDir.absolutePath}")
        }

        // Copy style.puml to each output directory
        def styleFile = new File(sourceDir, 'style.puml')
        if (styleFile.exists()) {
            Files.copy(styleFile.toPath(), new File(outputDir, 'style.puml').toPath(), StandardCopyOption.REPLACE_EXISTING)
        } else {
            println "style.puml not found in source directory. Skipping style file copying."
        }

        try {
            def processor = new PlantUmlProcessor(plantUmlJarPath)
            processor.process(sourceDir, outputDir)
        } catch (Exception e) {
            println "Error: ${e.message}"
            e.printStackTrace()
        }

    }
}