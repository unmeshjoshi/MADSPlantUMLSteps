import com.pumlsteps.PlantUmlProcessor
import com.pumlsteps.presentation.YamlPresentationProcessor
import com.pumlsteps.presentation.HtmlGenerator

import java.nio.file.Files
import java.nio.file.Paths

import static groovy.io.FileType.*
import java.nio.file.StandardCopyOption


plugins {
    id 'java'
    id 'groovy'
}

// Gradle task to generate diagrams for all .puml files in the source directory
task generate {
    doLast {
        def plantUmlJarPath = './plantuml-1.2024.8.jar'
        def sourceDir = file('src/diagrams')
        def outputDir = file('build/diagrams')
        outputDir.mkdirs()

        if (!sourceDir.exists() || !sourceDir.isDirectory()) {
            throw new GradleException("Source directory not found: ${sourceDir.absolutePath}")
        }

        // Copy style.puml to each output directory
        def styleFile = new File(sourceDir, 'style.puml')
        if (styleFile.exists()) {
            Files.copy(styleFile.toPath(), new File(outputDir, 'style.puml').toPath(), StandardCopyOption.REPLACE_EXISTING)
        } else {
            println "style.puml not found in source directory. Skipping style file copying."
        }

        try {
            def processor = new PlantUmlProcessor(plantUmlJarPath)
            processor.process(sourceDir, outputDir)
        } catch (Exception e) {
            println "Error: ${e.message}"
            e.printStackTrace()
        }

    }
}

task generateHtml {
    dependsOn generate  // This ensures diagrams are generated before creating the presentation

    doLast {
        def presentationDir = file('src/presentation')
        def buildDir = file('build/presentations')
        
        // Create build directory if it doesn't exist
        buildDir.mkdirs()
        
        // Copy required assets to build directory
        copy {
            from('.') {
                include 'styles.css'
                include 'presentation.js'
            }
            into buildDir
        }
        
        // Process each YAML file in the presentation directory
        presentationDir.eachFile { yamlFile ->
            if (yamlFile.name.endsWith('.yaml')) {
                def htmlFileName = yamlFile.name.replace('.yaml', '.html')
                def htmlFile = new File(buildDir, htmlFileName)
                // Create new generator instance for each file
                def generator = new HtmlGenerator()
                generator.generateHtmlFromYaml(yamlFile, htmlFile)
                println "Generated ${htmlFile.name} from ${yamlFile.name}"
            }
        }
        
        println "HTML presentations generated in: ${buildDir.absolutePath}"
    }
}

task generatePresentationFromYaml {
    dependsOn generate  // This ensures diagrams are generated before creating the presentation
    doLast {
        def yamlFile = file('example-slides.yaml')
        if (!yamlFile.exists()) {
            throw new GradleException("example-slides.yaml not found in project root directory")
        }
        
        def processor = new YamlPresentationProcessor(projectDir)
        def outputFile = new File(projectDir, "presentation.pptx")
        processor.processYamlToPresentation(yamlFile, outputFile)
        
        println "Presentation generated at: ${outputFile.absolutePath}"
    }
}